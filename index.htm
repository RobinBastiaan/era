<!doctype html>
<html lang="nl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Era</title>
    <style>
        :root {
            --hulpstaff-color: #FEE9A0;
            --staff-color: #fccf2d;
            --hopman-color: #ffb700;
        }

        #source-table { // only show the source table when editing the page
            //display: none;
        }
        #era {
            border: 1px solid black;
         }
        .legend {
            position: relative;
            display: inline-block;
            width: 94px;
            background-color: lightgrey;
            font-weight: 700;
            text-align: center;
            border: 3px solid black;
        }
        .staff-member {
            position: relative;
            padding: 10px 15px;
            margin: 5px;
            border-radius: 15px;
            font-weight: 700;
        }
        .no-end {
            border-radius: 15px 0 0 15px;
        }
        .no-end:after {
            content: "";
            height: 100%;
            margin-top: -10px;
            position: absolute;
            z-index: 1;
            width: 50px;
            right: 0;
            opacity: 1;
            background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1));
        }
    </style>
</head>
<body>

    <!-- The source table -->
    <table id="source-table" style="width: 600px;">
        <tbody>
        <tr>
            <td><strong>Staflid</strong></td>
            <td><strong>Hulpvaandrig sinds</strong></td>
            <td><strong>Vaandrig sinds</strong></td>
            <td><strong>Hopman sinds</strong></td>
            <td><strong>Eindjaar</strong></td>
        </tr>
        <tr>
            <td>Rowan</td>
            <td></td>
            <td>2010</td>
            <td></td>
            <td>2016</td>
        </tr>
        <tr>
            <td>Robin</td>
            <td>2010</td>
            <td>2011</td>
            <td></td>
            <td>2020</td>
        </tr>
        <tr>
            <td>Wilco</td>
            <td>2010</td>
            <td>2011</td>
            <td>2015</td>
            <td>2020</td>
        </tr>
        <tr>
            <td>Leon</td>
            <td></td>
            <td>2013</td>
            <td>2020</td>
            <td></td>
        </tr>
        <tr>
            <td>Rik</td>
            <td></td>
            <td>2015</td>
            <td></td>
            <td>2019</td>
        </tr>
        <tr>
            <td>Martijn</td>
            <td>2018</td>
            <td>2019</td>
            <td></td>
            <td></td>
        </tr>
        </tbody>
    </table>

    <hr>

    <!-- The Era div -->
    <div id="era"></div>

    <script>
        // get the smallest starting year
        function getMinYear() {
            let minYear = Number.MAX_SAFE_INTEGER; // init
            let children = document.getElementById("source-table").children[0];
            let len = children.childElementCount;
            for (let i = 1; i < len; i++) {
                let year = parseInt(children.children[i].children[1].innerHTML); // parseInt to remove e.g. &nbsp;
                if (year < minYear) {
                    minYear = year;
                }
                year = parseInt(children.children[i].children[2].innerHTML); // parseInt to remove e.g. &nbsp;
                if (year < minYear) {
                    minYear = year;
                }
            }
            return minYear;
        }

        // get the biggest ending year
        function getMaxYear() {
            let maxYear = 0; // init
            let children = document.getElementById("source-table").children[0];
            let len = children.childElementCount;
            for (let i = 1; i < len; i++) {
                let year = parseInt(children.children[i].children[4].innerHTML); // parseInt to remove e.g. &nbsp;
                if (year > maxYear) {
                    maxYear = year;
                }
            }
            return maxYear;
        }

        // show the entire timeline of the era
        function showEra() {
            let minYear = getMinYear();
            let maxYear = getMaxYear();

            // show legend
            for (let i = minYear; i <= maxYear; i++) {
                let div = document.createElement("div");
                div.classList.add("legend");
                div.append(`${i}`);
                document.getElementById("era").append(div);
            }

            // show all members
            let children = document.getElementById("source-table").children[0];
            let len = children.childElementCount;
            for (let i = 1; i < len; i++) {
                let name = children.children[i].children[0].innerHTML;
                let beginHulpStaff = parseInt(children.children[i].children[1].innerHTML);
                let beginStaff = parseInt(children.children[i].children[2].innerHTML);
                let beginHopman = parseInt(children.children[i].children[3].innerHTML);
                let begin = Math.min(isNaN(beginHulpStaff) ? Infinity : beginHulpStaff,
                    isNaN(beginStaff) ? Infinity : beginStaff, isNaN(beginHopman) ? Infinity : beginHopman);
                let end = parseInt(children.children[i].children[4].innerHTML);
                let noEnd = isNaN(end) ? 50 : 0;
                end = isNaN(end) ? new Date().getFullYear() : end; // if not ended; take current year
                let durationHulpStaff = isNaN(beginHulpStaff) ? 0 : beginStaff - beginHulpStaff;
                let durationStaff = isNaN(beginStaff) ? 0 : (isNaN(beginHopman) ? end - beginStaff + 1 : beginHopman - beginStaff);
                let durationHopman = isNaN(beginHopman) ? 0 : end - beginHopman + 1;

                let div = document.createElement("div");
                div.classList.add("staff-member");
                if (noEnd !== 0) div.classList.add("no-end");
                div.style.cssText = `margin-left: ${(begin-minYear)*100+50}px;` +
                                    `width: ${(end-begin)*100-30+noEnd}px;` +
                                    `background: linear-gradient(to right, var(--hulpstaff-color), var(--hulpstaff-color) ${(durationHulpStaff)*100}px,\n` +
                                    `var(--staff-color) ${(durationHulpStaff)*100}px, var(--staff-color) ${(durationHulpStaff + durationStaff)*100}px,\n` +
                                    `var(--hopman-color) ${(durationHulpStaff + durationStaff)*100}px, var(--hopman-color) ${(durationHulpStaff + durationStaff + durationHopman)*100}px);`;
                div.append(`${name} (${begin} - ${end})`);
                document.getElementById("era").append(div);
            }
        }

        showEra();
    </script>
</body>
</html>